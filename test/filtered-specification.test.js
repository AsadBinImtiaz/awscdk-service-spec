"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const index_1 = require("../lib/index");
const spec_validators_1 = require("./spec-validators");
test('filteredSpecification(/^AWS::S3::.*/)', () => {
    const filteredSpec = index_1.filteredSpecification(/^AWS::S3::.*/);
    expect(filteredSpec).not.toEqual(index_1.specification);
    expect(filteredSpec.ResourceTypes).not.toEqual({});
});
test('filteredSpecification(s => s.startsWith("AWS::S3::")', () => {
    const filteredSpec = index_1.filteredSpecification(s => s.startsWith('AWS::S3::'));
    expect(filteredSpec).not.toEqual(index_1.specification);
    expect(filteredSpec.ResourceTypes).not.toEqual({});
});
for (const name of index_1.resourceTypes().sort()) {
    describe(`filteredSpecification(${JSON.stringify(name)})`, () => {
        const filteredSpec = index_1.filteredSpecification(name);
        expect(filteredSpec).not.toEqual(index_1.specification);
        expect(filteredSpec.ResourceTypes).not.toEqual({});
        // Validate the spec is conform & coherent.
        spec_validators_1.validateSpecification(filteredSpec);
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyZWQtc3BlY2lmaWNhdGlvbi50ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZmlsdGVyZWQtc3BlY2lmaWNhdGlvbi50ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsd0NBQW1GO0FBQ25GLHVEQUEwRDtBQUUxRCxJQUFJLENBQUMsdUNBQXVDLEVBQUUsR0FBRyxFQUFFO0lBQ2pELE1BQU0sWUFBWSxHQUFHLDZCQUFxQixDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQzNELE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLHFCQUFhLENBQUMsQ0FBQztJQUNoRCxNQUFNLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDckQsQ0FBQyxDQUFDLENBQUM7QUFFSCxJQUFJLENBQUMsc0RBQXNELEVBQUUsR0FBRyxFQUFFO0lBQ2hFLE1BQU0sWUFBWSxHQUFHLDZCQUFxQixDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO0lBQzNFLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLHFCQUFhLENBQUMsQ0FBQztJQUNoRCxNQUFNLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDckQsQ0FBQyxDQUFDLENBQUM7QUFFSCxLQUFLLE1BQU0sSUFBSSxJQUFJLHFCQUFhLEVBQUUsQ0FBQyxJQUFJLEVBQUUsRUFBRTtJQUN6QyxRQUFRLENBQUMseUJBQXlCLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUU7UUFDOUQsTUFBTSxZQUFZLEdBQUcsNkJBQXFCLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDakQsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMscUJBQWEsQ0FBQyxDQUFDO1FBQ2hELE1BQU0sQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNuRCwyQ0FBMkM7UUFDM0MsdUNBQXFCLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDdEMsQ0FBQyxDQUFDLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZpbHRlcmVkU3BlY2lmaWNhdGlvbiwgcmVzb3VyY2VUeXBlcywgc3BlY2lmaWNhdGlvbiB9IGZyb20gJy4uL2xpYi9pbmRleCc7XG5pbXBvcnQgeyB2YWxpZGF0ZVNwZWNpZmljYXRpb24gfSBmcm9tICcuL3NwZWMtdmFsaWRhdG9ycyc7XG5cbnRlc3QoJ2ZpbHRlcmVkU3BlY2lmaWNhdGlvbigvXkFXUzo6UzM6Oi4qLyknLCAoKSA9PiB7XG4gIGNvbnN0IGZpbHRlcmVkU3BlYyA9IGZpbHRlcmVkU3BlY2lmaWNhdGlvbigvXkFXUzo6UzM6Oi4qLyk7XG4gIGV4cGVjdChmaWx0ZXJlZFNwZWMpLm5vdC50b0VxdWFsKHNwZWNpZmljYXRpb24pO1xuICBleHBlY3QoZmlsdGVyZWRTcGVjLlJlc291cmNlVHlwZXMpLm5vdC50b0VxdWFsKHt9KTtcbn0pO1xuXG50ZXN0KCdmaWx0ZXJlZFNwZWNpZmljYXRpb24ocyA9PiBzLnN0YXJ0c1dpdGgoXCJBV1M6OlMzOjpcIiknLCAoKSA9PiB7XG4gIGNvbnN0IGZpbHRlcmVkU3BlYyA9IGZpbHRlcmVkU3BlY2lmaWNhdGlvbihzID0+IHMuc3RhcnRzV2l0aCgnQVdTOjpTMzo6JykpO1xuICBleHBlY3QoZmlsdGVyZWRTcGVjKS5ub3QudG9FcXVhbChzcGVjaWZpY2F0aW9uKTtcbiAgZXhwZWN0KGZpbHRlcmVkU3BlYy5SZXNvdXJjZVR5cGVzKS5ub3QudG9FcXVhbCh7fSk7XG59KTtcblxuZm9yIChjb25zdCBuYW1lIG9mIHJlc291cmNlVHlwZXMoKS5zb3J0KCkpIHtcbiAgZGVzY3JpYmUoYGZpbHRlcmVkU3BlY2lmaWNhdGlvbigke0pTT04uc3RyaW5naWZ5KG5hbWUpfSlgLCAoKSA9PiB7XG4gICAgY29uc3QgZmlsdGVyZWRTcGVjID0gZmlsdGVyZWRTcGVjaWZpY2F0aW9uKG5hbWUpO1xuICAgIGV4cGVjdChmaWx0ZXJlZFNwZWMpLm5vdC50b0VxdWFsKHNwZWNpZmljYXRpb24pO1xuICAgIGV4cGVjdChmaWx0ZXJlZFNwZWMuUmVzb3VyY2VUeXBlcykubm90LnRvRXF1YWwoe30pO1xuICAgIC8vIFZhbGlkYXRlIHRoZSBzcGVjIGlzIGNvbmZvcm0gJiBjb2hlcmVudC5cbiAgICB2YWxpZGF0ZVNwZWNpZmljYXRpb24oZmlsdGVyZWRTcGVjKTtcbiAgfSk7XG59XG4iXX0=